# -*- coding: utf-8 -*-
"""
-------------------------------------------------
File Name:        2.isEq
Description :   
Author :          wellqin
date:             2020/4/13
Change Activity:  2020/4/13
-------------------------------------------------
1.2、is和==的区别： ==是判断两个值是否相等，is是判断两个值的地址是否一样

    1. 注意小整数【数字、str】与【数组】在引用对象的处理 ====> 【intern机制】
    intern机制，适用于小整数池和字符串，也就是说创建对象的时候会先在小整数池中查找，如果存在就返回，否则就会新建对象。
    记住仅仅适用于小整数池和字符串，对于list是不使用的s
"""

a = [1, 2, 3]
b = [1, 2, 3]  # 数组赋值时，会重新生成一个对象, 若 b = a来声明,则为True
print(a is b)  # False
print(id(a), id(b))  # 2497320800840 2497320801352
print(a == b)  # True  当运行这个的时候会调用魔法函数__eq__,来判断两值是否相等

# c = a
# print("c is a", c is a)  # True


a = 1
b = 1
print(a is b)  # True
print(a == b)  # True
print(id(a), id(b))  # 140716358922496 140716358922496
# a = "abc"
# b = "abc"
# print(a is b) # True
# 当创建一个小整数的时候，python会在下次创建一样的小整数时，会引用同一对象【intern机制】

"""
python为了优化速度，避免整数频繁申请和销毁内存空间，
范围 [-5,257) 并不包含257，这些对象是提前创建好的，不会被垃圾回收，
在python中位于这个范围的小整数对象用的都是同一个对象。
同理单个单个字母也是如此，每一个大整数均会创建一个对象。

**  intern机制
a= "helloword" 加入有10个a,python不可能会创建10个对象，只会占用一个内存，靠引用计数去维护何时释放，
但是中间有特殊符号就不会公用一个对象了，包括空格

**  总结
小整数 [-5,257)常驻内存，公用对象
单个字符常驻内存，公用对象
单个字符，没有特殊符号，默认开启intern机制，公用对象。引用计数为0 则消除

优点：在创建新的字符对象时，如果内存中已经存在，则直接引用，避免频繁的创建和销毁内存，提升效率。
缺点：在拼接字符串时，或者在改动字符串时会极大的影响性能。
     原因是字符串在Python当中是不可变对象，所以对字符串的改动不是inplace（原地）操作，需要新开辟内存地址，新建对象。
"""